// Shorthand for size properties
@mixin size($width, $height:$width) {
	width: $width;
	height: $height;
}

@mixin background-element($level: primary) {
	border-radius: 2px;
	color: $text-primary;
	@if $level == 'secondary'{
		border: 1px solid $border-secondary;
		background-color: $background-secondary;
	} @else if $level == 'accent' {
		border: 1px solid $border-accent;
		background-color: $background-accent;
	} @else { // Primary
		border: 1px solid $border-primary;
		background-color: $background-primary;
		box-shadow: 0 2px 6px rgba(#000, .25);
	}
}

@mixin hover($radius:true) {
	background-color: $background-hover;
	@if $radius {
		border-radius: 2px;
	}
}

@function oposite-side($side) {
	@if $side == 'top' {
		@return 'bottom';
	} @else if $side == 'bottom' {
		@return 'top';
	} @else if $side == 'right' {
		@return 'left';
	} @else {
		@return 'right';
	}
}

@function light-dark($light, $dark) {
	@if variable-exists(dark-mode) and $dark-mode {
		@return $dark;
	} @else {
		@return $light;
	}
}

@function resolve-transparency($color, $background) {
	$alpha: alpha($color) * 100%;
	@return mix(opacify($color, 1), $background, $alpha);
}

@mixin cinnamon-gradient($direction, $start, $end: transparent) {
	@if $direction == 'top' or $direction == 'bottom' {
		background-gradient-direction: vertical;
	} @else {
		background-gradient-direction: horizontal;
	}

	@if $direction == 'bottom' or $direction == 'right' {
		background-gradient-start: $start;
		background-gradient-end: $end;
	} @else {
		background-gradient-start: $end;
		background-gradient-end: $start;
	}
}
